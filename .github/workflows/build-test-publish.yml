name: Build

on:
    push:
        branches: ['*']
        pull_request: [main]
        tags: ['v*.*.*']

jobs:
    test:
        name: Test with Python ${{matrix.python_version}} on ${{matrix.os}}
        runs-on: ${{matrix.os}}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python_version:
                    - '3.10'
                include:
                    - os: windows-latest
                      python_version: '3.10'
        steps:
            - uses: actions/checkout@v2
            - name: Set up Python ${{matrix.python_version}}
              uses: actions/setup-python@v2
              with:
                  python-version: ${{matrix.python_version}}
            - uses: actions/cache@v2
              with:
                  path: ~/.cache/pip
                  key: ${{runner.os}}-pip-${{hashFiles('pyproject.toml')}}
                  restore-keys: |
                      ${{runner.os}}-pip-
                      ${{runner.os}}-
            - name: Upgrade Pip
              run: |-
                  python -m pip install -U pip
            - name: Install test dependencies
              run: |-
                  python -m pip install '.[test]'
            - name: Run unit tests
              run: |-
                  python -m pytest --cov-report=term --cov=kitchengpt --rootdir=.

    publish:
        name: Publish Docker image
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1

            - name: Login to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: yourusername/yourappname:latest
                  build-args: |
                      BUILDKIT_INLINE_CACHE=1

            - name: Build and push Docker image with tag (release only)
              if: startsWith(github.ref, 'refs/tags/v')
              uses: docker/build-push-action@v2
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: yourusername/yourappname:${{ github.ref_name }}
                  build-args: |
                      BUILDKIT_INLINE_CACHE=1
